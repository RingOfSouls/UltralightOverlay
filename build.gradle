
// For those who want the bleeding edge

buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.1.+') {
            changing = true
        }
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'forge'
apply plugin: 'java'

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

dependencies {
    //implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    //ultralight
    implementation "com.labymedia:ultralight-java-base:0.4.12"
    implementation "com.labymedia:ultralight-java-databind:0.4.12"
    implementation "com.labymedia:ultralight-java-gpu:0.4.12"
}

group = "me.ringofsoul.ultralightoverlay"
archivesBaseName = "[CO-Ring]UltralightOverlay"

minecraft {
    version = project.minecraft_version + "-" + project.forge_version
}

jar {
    enabled = false
    dependsOn(shadowJar { classifier = null })
}

shadowJar {
    dependencies {
        exclude(dependency('tv.twitch:'))
        exclude(dependency('org.scala-lang:'))
        exclude(dependency('org.scala-lang.plugins:'))
        exclude(dependency('org.scala-lang.modules:'))
        exclude(dependency('org.ow2.asm:'))
        exclude(dependency('org.lwjgl.lwjgl:'))
        exclude(dependency('org.apache.logging.log4j:'))
        exclude(dependency('org.apache.httpcomponents:'))
        exclude(dependency('org.apache.commons:'))
        exclude(dependency('net.sf.trove4j:'))
        exclude(dependency('net.sf.jopt-simple:'))
        exclude(dependency('net.minecraft:'))
        exclude(dependency('net.java.jutils:'))
        exclude(dependency('net.java.jinput:'))
        exclude(dependency('lzma:'))
        exclude(dependency('java3d:'))
        exclude(dependency('io.netty:'))
        exclude(dependency('commons-logging:'))
        exclude(dependency('commons-io:'))
        exclude(dependency('commons-codec:'))
        exclude(dependency('com.typesafe:'))
        exclude(dependency('com.typesafe.akka:'))
        exclude(dependency('com.paulscode:'))
        exclude(dependency('com.mojang:'))
        exclude(dependency('com.ibm.icu:'))
        exclude(dependency('com.google.guava:'))
        exclude(dependency('com.google.code.gson:'))
        exclude(dependency('com.google.code.findbugs:'))
        exclude(dependency(':forgeBin:1.7.10-10.13.4.1614-1.7.10'))
    }
}
reobf {
    shadowJar {} // Reobfuscate the shadowed JAR
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // Replace values in only mcmod.info.
    filesMatching('mcmod.info') {
        // Replace version and mcversion.
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

repositories {
    mavenCentral()
}